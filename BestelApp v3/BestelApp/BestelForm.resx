<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>